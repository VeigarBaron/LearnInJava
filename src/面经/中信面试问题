

1.java基础 object类有哪些方法 这些方法的作用？修改equals方法后需要修改hashcode方法么？为什么需要？
4.多线程开发，线程池构件的参数，核心线程数、最大线程数、等待队列，在什么时候会新建线程处理新来的请求？
5.同步锁的使用，synchronize和lock区别，加锁原理？
6.volatile关键字能够保证什么效果，怎么保证的？
7.使用过哪些容器类，list set ,说说底层原理？
8.jvm相关问题，结构，垃圾回收策略，垃圾回收器，什么时候younggc？
    什么时候full gc，举例说明一个对象创建时是分配在哪个区域？
9.根据简历上的项目和使用工具，问一些redis概述，支持哪些数据类型，es为什么快，使用了什么索引？
11.mysql索引，聚集索引用的什么数据结构？为什么用B+树，不是二叉树 B树？
InnoDB一棵B+树可以存放多少行数据？这个问题的简单回答是：约2千万。
    这里我们先假设B+树高为2，即存在一个根节点和若干个叶子节点，那么这棵B+树的存放总记录数为：根节点指针数*单个叶子节点记录行数。
    上文我们已经说明单个叶子节点（页）中的记录数=16K/1K=16。（这里假设一行记录的数据大小为1k）。
    那么现在我们需要计算出非叶子节点能存放多少指针，其实这也很好算，我们假设主键ID为bigint类型，长度为8字节，而指针大小在InnoDB源码中设置为6字节，
    这样一共14字节，我们一个页中能存放多少这样的单元，其实就代表有多少指针，即16384/14=1170。那么可以算出一棵高度为2的B+树，能存放1170*16=18720条这样的数据记录。
    根据同样的原理我们可以算出一个高度为3的B+树可以存放：1170*1170*16=21902400条这样的记录。所以在InnoDB中B+树高度一般为1-3层，它就能满足千万级的数据存储。
    在查找数据时 一次页的查找代表一次IO， 所以通过主键索引查询通常 只需要1-3次IO操作 即可查找到数据。
    在计算机中磁盘存储数据最小单元是扇区，一个扇区的大小是512字节，而文件系统（例如XFS/EXT4）他的最小单元是块，
    一个块的大小是4k，而对于我们的InnoDB存储引擎也有自己的最小储存单元——页（Page），一个页的大小是16K。
12.jdk8的一些新特性用了哪些，lamda stream  原理，为什么用？
13.其他随便闲聊了
数据库最左匹配原则，设计模式知道那些，数据结构，二分查找法
tcp/ip      http通信      spring的配置文件怎么改成的注解
14.spring循环依赖