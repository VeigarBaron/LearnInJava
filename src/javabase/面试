1.java基础 object类有哪些方法 这些方法的作用  常见的hashcode equals ，修改equals方法后需要修改hashcode方法么  需要，为什么需要
    1．clone方法
    保护方法，实现对象的浅复制，只有实现了Cloneable接口才可以调用该方法，否则抛出CloneNotSupportedException异常。
    主要是JAVA里除了8种基本类型传参数是值传递，其他的类对象传参数都是引用传递，我们有时候不希望在方法里讲参数改变，这是就需要在类中复写clone方法。
    2．getClass方法
    final方法，获得运行时类型。
    3．toString方法
    该方法用得比较多，一般子类都有覆盖。
    4．finalize方法
    该方法用于释放资源。因为无法确定该方法什么时候被调用，很少使用。
    5．equals方法
    该方法是非常重要的一个方法。一般equals和==是不一样的，但是在Object中两者是一样的。子类一般都要重写这个方法。
    6．hashCode方法
    该方法用于哈希查找，可以减少在查找中使用equals的次数，重写了equals方法一般都要重写hashCode方法。这个方法在一些具有哈希功能的Collection中用到。
    一般必须满足obj1.equals(obj2)==true。可以推出obj1.hash- Code()==obj2.hashCode()，但是hashCode相等不一定就满足equals。不过为了提高效率，应该尽量使上面两个条件接近等价。
    如果不重写hashcode(),在HashSet中添加两个equals的对象，会将两个对象都加入进去。
    7．wait方法
    wait方法就是使当前线程等待该对象的锁，当前线程必须是该对象的拥有者，也就是具有该对象的锁。wait()方法一直等待，直到获得锁或者被中断。wait(long timeout)设定一个超时间隔，如果在规定时间内没有获得锁就返回。
    调用该方法后当前线程进入睡眠状态，直到以下事件发生。
    （1）其他线程调用了该对象的notify方法。
    （2）其他线程调用了该对象的notifyAll方法。
    （3）其他线程调用了interrupt中断该线程。
    （4）时间间隔到了。
    此时该线程就可以被调度了，如果是被中断的话就抛出一个InterruptedException异常。
    8．notify方法
    该方法唤醒在该对象上等待的某个线程。
    9．notifyAll方法
    该方法唤醒在该对象上等待的所有线程。

4.多线程开发，线程池构件的参数，核心线程数、最大线程数、等待队列，在什么时候会新建线程处理新来的请求
    线程池有这么几个重要的参数：
    corePoolSize=> 线程池里的核心线程数量
    maximumPoolSize=> 线程池里允许有的最大线程数量
    keepAliveTime=> 空闲线程存活时间
    unit=> keepAliveTime的时间单位,比如分钟,小时等
    workQueue=> 缓冲队列
    threadFactory=> 线程工厂用来创建新的线程放入线程池
    handler=> 线程池拒绝任务的处理策略,比如抛出异常等策略

5.同步锁的使用，synchronize和lock区别，加锁原理

6.volatile关键字能够保证什么效果，顺序性和可见性，怎么保证的
7.使用过哪些容器类，list set ,说说底层原理
8.jvm相关问题，结构，垃圾回收策略，垃圾回收器，什么时候younggc  什么时候full gc，举例说明一个对象创建时是分配在哪个区域
9.根据简历上的项目和使用工具，问一些redis概述，支持哪些数据类型，es为什么快，使用了什么索引--倒排索引
11.mysql索引，聚集索引用的什么数据结构  B+树，为什么用B+树，不是二叉树 B树？减少磁盘读写，普通索引
12.jdk8的一些新特性用了哪些，lamda stream  原理，为什么用。。简单说说 他也不太懂
13.其他随便闲聊了